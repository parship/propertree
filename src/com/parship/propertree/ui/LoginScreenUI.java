package com.parship.propertree.ui;

import com.parship.propertree.controller.event.impl.LoginEvent;
import com.parship.propertree.controller.impl.PropertreeApplicationController;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.event.ShortcutAction;
import com.vaadin.event.ShortcutListener;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.PasswordField;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

public class LoginScreenUI extends CustomComponent implements Button.ClickListener {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private VerticalLayout layoutCredentials;
	@AutoGenerated
	private Button btnLogin;
	@AutoGenerated
	private HorizontalLayout layoutFields;
	@AutoGenerated
	private PasswordField txtPass;
	@AutoGenerated
	private TextField txtUser;
	@AutoGenerated
	private Label lblHeader;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public LoginScreenUI() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		btnLogin.addClickListener(this);
		
		ShortcutListener enterListener = new ShortcutListener("ENTER", ShortcutAction.KeyCode.ENTER, null) {
			@Override
			public void handleAction(Object sender, Object target) {
				if(target==txtPass || target == txtUser){ //limit the enters to only from the textfield from this form factory
					buttonClick(null);
				}
			}
		};
		
		txtUser.addShortcutListener(enterListener);
		txtPass.addShortcutListener(enterListener);
			
		mainLayout.setComponentAlignment(this.layoutCredentials, Alignment.MIDDLE_CENTER);
		
	}

	@Override
	public void buttonClick(ClickEvent event) {
		LoginEvent e = new LoginEvent();
		e.addEventParameter("user", this.txtUser.getValue());
		e.addEventParameter("pass", this.txtPass.getValue());
		PropertreeApplicationController controller = PropertreeApplicationController.getInstance();
		controller.executeEvent(e);
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// layoutCredentials
		layoutCredentials = buildLayoutCredentials();
		mainLayout.addComponent(layoutCredentials);
		
		return mainLayout;
	}

	@AutoGenerated
	private VerticalLayout buildLayoutCredentials() {
		// common part: create layout
		layoutCredentials = new VerticalLayout();
		layoutCredentials.setImmediate(false);
		layoutCredentials.setWidth("460px");
		layoutCredentials.setHeight("190px");
		layoutCredentials.setMargin(false);
		
		// lblHeader
		lblHeader = new Label();
		lblHeader.setImmediate(false);
		lblHeader.setWidth("-1px");
		lblHeader.setHeight("-1px");
		lblHeader.setValue("ProperTree Login");
		layoutCredentials.addComponent(lblHeader);
		layoutCredentials.setComponentAlignment(lblHeader, new Alignment(48));
		
		// layoutFields
		layoutFields = buildLayoutFields();
		layoutCredentials.addComponent(layoutFields);
		layoutCredentials
				.setComponentAlignment(layoutFields, new Alignment(48));
		
		// btnLogin
		btnLogin = new Button();
		btnLogin.setCaption("Login");
		btnLogin.setImmediate(true);
		btnLogin.setWidth("220px");
		btnLogin.setHeight("-1px");
		layoutCredentials.addComponent(btnLogin);
		layoutCredentials.setComponentAlignment(btnLogin, new Alignment(48));
		
		return layoutCredentials;
	}

	@AutoGenerated
	private HorizontalLayout buildLayoutFields() {
		// common part: create layout
		layoutFields = new HorizontalLayout();
		layoutFields.setImmediate(false);
		layoutFields.setWidth("100.0%");
		layoutFields.setHeight("-1px");
		layoutFields.setMargin(true);
		
		// txtUser
		txtUser = new TextField();
		txtUser.setCaption("User");
		txtUser.setImmediate(false);
		txtUser.setWidth("200px");
		txtUser.setHeight("24px");
		layoutFields.addComponent(txtUser);
		layoutFields.setExpandRatio(txtUser, 1.0f);
		
		// txtPass
		txtPass = new PasswordField();
		txtPass.setCaption("Password");
		txtPass.setImmediate(false);
		txtPass.setWidth("200px");
		txtPass.setHeight("-1px");
		layoutFields.addComponent(txtPass);
		layoutFields.setExpandRatio(txtPass, 1.0f);
		
		return layoutFields;
	}
}
